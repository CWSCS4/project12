// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents a String object. Implements the String type.
 */
class String {
	field Array chars;
	field int length;

	/** Constructs a new empty String with a maximum length of maxLength. */
	constructor String new(int maxLength) {
		let chars = Array.new(maxLength);
		let length = 0;
		return this;
	}

	/** De-allocates the string and frees its space. */
	method void dispose() {
		do chars.dispose();
		do Memory.deAlloc(this);
		return;
	}

	/** Returns the current length of this String. */
	method int length() {
		return length;
	}

	/** Returns the character at location j. */
	method char charAt(int j) {
		return chars[j];
	}

	/** Sets the j'th character of this string to be c. */
	method void setCharAt(int j, char c) {
		let chars[j] = c;
		return;
	}

	/** Appends the character c to the end of this String.
	 *  Returns this string as the return value. */
	method String appendChar(char c) {
		let chars[length] = c;
		let length = length + 1;
		return this;
	}

	/** Erases the last character from this String. */
	method void eraseLastChar() {
		let length = length - 1;
		return;
	}

	/** Returns the integer value of this String until the first non
	 *  numeric character. */
	method int intValue() {
		var int i;
		var int value;

		while (i < length) {
			let value = value * 10 + (chars[i] - 48);

			let i = i + 1;
		}

		return value;
	}

	function String intToString(int number) {
		var int lastDigit;
		var String string;

		let lastDigit = Math.mod(number, 10);
		if (lastDigit < 10) {
			let string = String.new(5); //32767
			do string.appendChar(lastDigit + 48);
			return string;
		}
		else {
			let string = String.intToString(number / 10);
			return string.appendChar(lastDigit + 48);
		}
	}

	/** Sets this String to hold a representation of the given number. */
	method void setInt(int number) {
		var boolean negative;
		var String string;
		var int i;

		let negative = number < 0;
		if (negative) { let number = -number; }

		let string = String.intToString(number);
		if (negative) {
			let chars[0] = 45;
			let i = 1;
			let length = string.length() + 1;
			while (i < length) {
				let chars[i] = string.charAt(i - 1);
				let i = i + 1;
			}
		}
		else {
			let length = string.length();
			while (i < length) {
				let chars[i] = string.charAt(i);
				let i = i + 1;
			}
		}
		return;
	}

	/** Returns the new line character. */
	function char newLine() {
		return 128;
	}

	/** Returns the backspace character. */
	function char backSpace() {
		return 129;
	}

	/** Returns the double quote (") character. */
	function char doubleQuote() {
		return 34;
	}
}